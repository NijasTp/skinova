<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Category Management</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"></link>
  <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10/dist/sweetalert2.min.css"/>
  <style>
    body {
      font-family: 'Roboto', sans-serif;
      background-color: #f8f9fa;
    }
  </style>
</head>
<body>
  <%- include("../../views/partials/admin/header") %>

  <section class="container mx-auto p-4">
    <div class="mb-4">
      <h2 class="text-2xl font-bold">Category Management</h2>
    </div>

    <div class="bg-white shadow-md rounded-lg mb-4">
      <div class="bg-gray-800 text-white p-4 rounded-t-lg">
        <h4 class="text-lg font-semibold">Search Categories</h4>
      </div>
      <div class="p-4">
        <form action="/admin/category/" method="get" class="flex flex-wrap gap-2">
          <input type="text" class="form-input flex-grow rounded-l-lg" placeholder="Search categories" name="search">
          <button class="bg-blue-500 text-white px-4 py-2 rounded-r-lg" type="submit">
            <i class="fas fa-search"></i> Search
          </button>
          <a href="/admin/category" class="bg-red-500 text-white px-4 py-2 rounded-lg">Clear</a>
        </form>
      </div>
    </div>

    <div class="flex flex-wrap -mx-2">
      <div class="w-full lg:w-1/3 px-2 mb-4">
        <div class="bg-white shadow-md rounded-lg">
          <div class="bg-gray-800 text-white p-4 rounded-t-lg">
            <h4 class="text-lg font-semibold">Add New Category</h4>
          </div>
          <div class="p-4">
            <form id="addCategoryForm">
              <div class="mb-3">
                <label for="category_name" class="form-label">Name</label>
                <input type="text" name="name" placeholder="Category name" class="form-input w-full rounded-lg" id="category_name" required>
              </div>
              <div class="mb-3">
                <label for="category_description" class="form-label">Description</label>
                <textarea name="description" placeholder="Category description" class="form-input w-full rounded-lg" id="category_description" required></textarea>
              </div>
              <button class="bg-blue-500 text-white px-4 py-2 rounded-lg w-full" type="submit">Create Category</button>
            </form>
          </div>
        </div>
      </div>

      <div class="w-full lg:w-2/3 px-2 mb-4">
        <div class="bg-white shadow-md rounded-lg">
          <div class="bg-gray-800 text-white p-4 rounded-t-lg">
            <h4 class="text-lg font-semibold">Category List</h4>
          </div>
          <div class="p-4">
            <div class="overflow-x-auto">
              <table class="min-w-full bg-white">
                <thead>
                  <tr>
                    <th class="py-2 px-4 bg-gray-800 text-white">Name</th>
                    <th class="py-2 px-4 bg-gray-800 text-white">Description</th>
                    <th class="py-2 px-4 bg-gray-800 text-white">Offer</th>
                    <th class="py-2 px-4 bg-gray-800 text-white">Status</th>
                  </tr>
                </thead>
                <tbody>
                  <% categories.forEach((category) => { %>
                    <tr class="border-b">
                      <td class="py-2 px-4"><%= category.name %></td>
                      <td class="py-2 px-4"><%= category.description %></td>
                      <td class="py-2 px-4">
                        <%= category.categoryOffer  ? `${category.categoryOffer}%` : '0%' %>
                        <% if (category.categoryOffer < 1) { %>
                          <button class="bg-blue-500 text-white px-2 py-1 rounded" onclick="addOffer('<%= category._id %>')">
                             Add
                          </button>
                        <% } else { %>
                          <button class="bg-yellow-500 text-white px-2 py-1 rounded" onclick="editOffer('<%= category._id %>', '<%= category.categoryOffer %>')">
                            Edit
                          </button>
                          <button class="bg-green-500 text-white px-2 py-1 rounded" onclick="deleteOffer('<%= category._id %>')">
                             Remove
                          </button>
                        <% } %>
                      </td>
                      
                      <td class="py-2 px-4">
                        <button class="bg-blue-500 text-white px-2 py-1 rounded" 
onclick="editCategory('<%= category._id %>', '<%= category.name.replace(/'/g, "\\'") %>', '<%= category.description.replace(/'/g, "\\'") %>')">
  Edit
</button>

                        <% if (category.isListed) { %>
                          <button class="bg-red-500 text-white px-2 py-1 rounded" onclick="unlistCategory('<%= category._id %>')">
                             Unlist
                          </button>
                        <% } else { %>
                          <button class="bg-green-500 text-white px-2 py-1 rounded" onclick="listCategory('<%= category._id %>')">
                             List
                          </button>
                        <% } %>
                      </td>
                    </tr>
                  <% }) %>
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <nav aria-label="Page navigation" class="mt-4">
          <ul class="flex justify-center space-x-2">
            <% if (currentPage > 1) { %>
              <li class="page-item">
                <a class="page-link" href="?page=<%= currentPage - 1 %>" aria-label="Previous">
                  <span aria-hidden="true">&laquo;</span>
                </a>
              </li>
            <% } %>
            
            <% for (let i = 1; i <= totalPages; i++) { %>
              <li class="page-item <%= i === currentPage ? 'bg-blue-500 text-white' : 'bg-gray-200' %> px-3 py-1 rounded">
                <a class="page-link" href="?page=<%= i %>"><%= i %></a>
              </li>
            <% } %>
            
            <% if (currentPage < totalPages) { %>
              <li class="page-item">
                <a class="page-link" href="?page=<%= currentPage + 1 %>" aria-label="Next">
                  <span aria-hidden="true">&raquo;</span>
                </a>
              </li>
            <% } %>
          </ul>
        </nav>
      </div>
    </div>
  </section>

  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>

  <script>
    // Add Category Form Submission
    document.getElementById('addCategoryForm').addEventListener('submit', function(e) {
      e.preventDefault();
      const formData = new FormData(this);

      fetch('/admin/addCategory', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(Object.fromEntries(formData))
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          Swal.fire({
            title: 'Success!',
            text: data.message,
            icon: 'success'
          }).then(() => {
            location.reload();
          });
        } else {
          Swal.fire({
            title: 'Error!',
            text: data.message,
            icon: 'error'
          });
        }
      })
      .catch(error => {
        console.error('Error:', error);
        Swal.fire({
          title: 'Error!',
          text: 'An error occurred while adding the category',
          icon: 'error'
        });
      });
    });

    // Edit Category Function
    function editCategory(id, name, description) {
      console.log(id, name, description);
      Swal.fire({
        title: 'Edit Category',
        html:
          `<input id="swal-input1" class="swal2-input" value="${name}" placeholder="Category Name">` +
          `<textarea id="swal-input2" class="swal2-textarea" placeholder="Category Description">${description}</textarea>`,
        focusConfirm: false,
        preConfirm: () => {
          return {
            name: document.getElementById('swal-input1').value,
            description: document.getElementById('swal-input2').value
          }
        }
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/editCategory/${id}`, {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify(result.value)
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire('Updated!', 'Category has been updated.', 'success').then(() => {
                location.reload();
              });
            } else {
              Swal.fire('Error', data.message || 'Failed to update category', 'error');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            Swal.fire('Error', 'An error occurred while updating the category', 'error');
          });
        }
      });
    }

    // Unlist Category Function
    function unlistCategory(id) {
      Swal.fire({
        title: 'Are you sure?',
        text: "You want to unlist this category?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, unlist it!'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/listCategory?id=${id}`, {
            method: 'GET'
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire('Unlisted!', 'Category has been unlisted.', 'success').then(() => {
                location.reload();
              });
            } else {
              Swal.fire('Error', data.message || 'Failed to unlist category', 'error');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            Swal.fire('Error', 'An error occurred while unlisting the category', 'error');
          });
        }
      });
    }

    // List Category Function
    function listCategory(id) {
      Swal.fire({
        title: 'Are you sure?',
        text: "You want to list this category?",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, list it!'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/unListCategory?id=${id}`, {
            method: 'GET'
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire('Listed!', 'Category has been listed.', 'success').then(() => {
                location.reload();
              });
            } else {
              Swal.fire('Error', data.message || 'Failed to list category', 'error');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            Swal.fire('Error', 'An error occurred while listing the category', 'error');
          });
        }
      });
    }

    function addOffer(categoryId) {
      Swal.fire({
        title: 'Add Offer',
        input: 'number',
        inputAttributes: {
          min: 1,
          max: 99,
          step: 1
        },
        showCancelButton: true,
        confirmButtonText: 'Add',
        showLoaderOnConfirm: true,
        preConfirm: (percentage) => {
          return fetch('/admin/addCategoryOffer', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ categoryId, percentage: parseInt(percentage) })
          })
          .then(response => response.json())
          .then(data => {
            if (!data.status) {
              throw new Error(data.message)
            }
            return data
          })
          .catch(error => {
            Swal.showValidationMessage(`Request failed: ${error}`)
          })
        },
        allowOutsideClick: () => !Swal.isLoading()
      }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire({
            title: 'Success!',
            text: result.value.message,
            icon: 'success'
          }).then(() => {
            location.reload();
          });
        }
      })
    }

    function editOffer(categoryId, currentOffer) {
      Swal.fire({
        title: 'Edit Offer',
        input: 'number',
        inputValue: currentOffer,
        inputAttributes: {
          min: 1,
          max: 99,
          step: 1
        },
        showCancelButton: true,
        confirmButtonText: 'Update',
        showLoaderOnConfirm: true,
        preConfirm: (percentage) => {
          return fetch('/admin/editCategoryOffer', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ categoryId, percentage: parseInt(percentage) })
          })
          .then(response => response.json())
          .then(data => {
            if (!data.status) {
              throw new Error(data.message)
            }
            return data
          })
          .catch(error => {
            Swal.showValidationMessage(`Request failed: ${error}`)
          })
        },
        allowOutsideClick: () => !Swal.isLoading()
      }).then((result) => {
        if (result.isConfirmed) {
          Swal.fire({
            title: 'Success!',
            text: result.value.message,
            icon: 'success'
          }).then(() => {
            location.reload();
          });
        }
      })
    }

    function deleteOffer(categoryId) {
      Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch('/admin/removeCategoryOffer', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json',
            },
            body: JSON.stringify({ categoryId })
          })
          .then(response => response.json())
          .then(data => {
            if (data.status) {
              Swal.fire(
                'Deleted!',
                'The offer has been deleted.',
                'success'
              ).then(() => {
                location.reload();
              });
            } else {
              Swal.fire(
                'Error!',
                data.message,
                'error'
              );
            }
          })
          .catch(error => {
            Swal.fire(
              'Error!',
              'An error occurred while deleting the offer.',
              'error'
            );
          });
        }
      })
    }

    function deleteCategory(categoryId) {
      Swal.fire({
        title: 'Are you sure?',
        text: "You won't be able to revert this!",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#3085d6',
        cancelButtonColor: '#d33',
        confirmButtonText: 'Yes, delete it!'
      }).then((result) => {
        if (result.isConfirmed) {
          fetch(`/admin/deleteCategory/${categoryId}`, {
            method: 'DELETE',
          })
          .then(response => response.json())
          .then(data => {
            if (data.success) {
              Swal.fire(
                'Deleted!',
                'The category has been deleted.',
                'success'
              ).then(() => {
                location.reload();
              });
            } else {
              Swal.fire(
                'Error!',
                data.message,
                'error'
              );
            }
          })
          .catch(error => {
            console.error('Error:', error);
            Swal.fire(
              'Error!',
              'An error occurred while deleting the category.',
              'error'
            );
          });
        }
      });
    }
  </script>

  <%- include("../../views/partials/admin/footer") %>
</body>
</html>