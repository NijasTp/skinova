<html>
<head>
  <title>Checkout</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css" rel="stylesheet"/>
  <style>
            .hero {
            display: flex;
            justify-content: space-between;
            background-color: #e6f4f4;
            align-items: center;
            padding: 4rem 2rem;
            width: 100%;
            margin: 0 auto;
            min-height: 50vh;
        }
        .hero-content {
            max-width: 500px;
            margin-left: 40%;
        }
        .hero-title {
            font-size: 2rem;
            line-height: 1.2;
            color: #2c3e50;
            margin-bottom: 1rem;
        }
        .hero-description {
            color: #5d6d7e;
            margin-bottom: 2rem;
            line-height: 1.6;
        }
        .cta-button {
            display: inline-block;
            padding: 0.8rem 2rem;
            background-color: #1a4741;
            color: white;
            text-decoration: none;
            border-radius: 4px;
            transition: background-color 0.3s ease;
        }
        .cta-button:hover {
            background-color: #123530;
        }
        .hero-image {
            width: 300px;
            position: relative;
            right: 100px;
        }
        @media (max-width: 768px) {
            .hero {
                flex-direction: column;
                text-align: center;
                padding: 2rem;
            }
            .hero-image {
                width: 300px;
                position: relative;
                left: 30px;
            }
        }
  </style>
</head>
<body class="bg-gray-100" style="font-family: 'Roboto', sans-serif;">

  <%- include("../partials/user/header") %>
  <main class="hero w-full">
    <div class="hero-content">
        <b><h1 class="hero-title">CHECKOUT</h1></b>
        <p class="hero-description">
            <a href="/">Home</a> <span> > </span> <a href="/cart">Cart<span> > </span> <a href="/checkout">Checkout</a>
        </p>
    </div>
    <img src="/img/skinova cover.png" alt="Skinova Cover" class="hero-image">
</main>
  <div class="container mx-auto mt-8">


    <!-- Cart Items -->
    <div class="bg-white p-6 shadow-md">
      <h2 class="font-bold text-lg mb-4">Order Summary</h2>
      <table class="w-full">
        <thead>
          <tr class="bg-gray-200">
            <th class="py-2 px-4">Product</th>
            <th class="py-2 px-4">Price</th>
            <th class="py-2 px-4">Quantity</th>
            <th class="py-2 px-4">Total</th>
          </tr>
        </thead>
        <tbody>
            <% if (cartItems && cartItems.length > 0) { %>
                <% cartItems.forEach(item => { %>
                  
                  <tr class="border-b">
                    <td class="py-4 px-4 flex items-center">
                      <img src="<%= item.productId.productImage[0] %>" class="w-16 h-16 mr-4" alt="Product Image">
                      <div>
                        <h2 class="font-bold"><%= item.productId.productName %></h2>
                        <p><%= item.productId.description %></p>
                      </div>
                    </td>
                    <td class="py-4 px-4">₹<%= item.productId.salePrice %></td>
                    <td class="py-4 px-4"><%= item.quantity %></td>
                    <td class="py-4 px-4">₹<%= item.totalPrice %></td>
                  </tr>
                <% }) %>
              <% } else { %>
                <tr>
                  <td colspan="4" class="text-center py-4">Your cart is empty</td>
                </tr>
              <% } %>
              
        </tbody>
      </table>
    </div>

<!-- Cart Total -->
<div class="bg-white p-6 shadow-md mt-6">
  <h2 class="font-bold text-lg mb-4">Cart Totals</h2>
  


  <!-- Total Discount (if any) -->
  <% if (totalDiscount > 0) { %>
    <div class="flex justify-between text-md text-green-600 font-bold">
      <span>Discount Applied</span>
      <span>- ₹<%= totalDiscount.toFixed(2) %></span>
    </div>
  <% } %>

  <!-- Grand Total (After Discount) -->
  <div class="flex justify-between font-bold text-lg mt-2">
    <span>Total</span>
    <span>₹<%= grandTotal.toFixed(2) %></span>
  </div>
</div>


<div class="bg-white p-6 shadow-md mt-6">
    <h2 class="font-bold text-lg mb-4">Select Delivery Address</h2>
    
    <div class="bg-white p-6 shadow-md mt-6">
        <h2 class="font-bold text-lg mb-4">Select Delivery Address</h2>
        
        <% if (addresses && addresses.length > 0) { %>
          <% addresses.forEach(addressDoc => { %>
            <% addressDoc.address.forEach((address, index) => { %>
                <script>console.log("Address ID:", "<%= address._id %>");</script>
                <label class="block border p-4 rounded-lg mb-2 cursor-pointer">
                    <input type="radio" name="selectedAddress" value="<%= address._id %>" <%= index === 0 ? 'checked' : '' %> >
                    <span class="ml-2 font-semibold"><%= address.name %></span>
                    <p class="ml-6 text-sm text-gray-600">
                        <%= address.streetAddress %>, <%= address.city %>, <%= address.state %> - <%= address.pincode %>
                    </p>
                </label>
            <% }) %>
        <% }) %>
        <% } else { %>
          <p class="text-red-500">No saved addresses. Please add one in your profile.</p>
        <% } %>
      
        <a href="/add-address" class="bg-blue-500 text-white px-4 py-2 rounded-md mt-2">
          + Add New Address
        </a>
    </div>

    <!-- Payment & Checkout -->
    <div class="bg-white p-6 shadow-md mt-6">
      <h2 class="font-bold text-lg mb-4">Payment Method</h2>
      <div>
        <label class="block">
          <input type="radio" name="payment" value="cod" checked /> Cash on Delivery <br>
          <input type="radio" name="payment" value="razorpay" checked /> Razorpay
        </label>
      </div>
      <button onclick="placeOrder()" class="bg-teal-500 text-white px-6 py-3 rounded-full w-full mt-4">
        Place Order
      </button>
    </div>
  </div>

  <script src="https://checkout.razorpay.com/v1/checkout.js"></script>
  <script>
      async function placeOrder() {
  try {
    const addressId = document.querySelector("input[name='selectedAddress']:checked")?.value;
    const paymentMethod = document.querySelector("input[name='payment']:checked")?.value;

    if (!addressId) {
      Swal.fire({ icon: "warning", title: "Select an Address", text: "Please select an address before placing an order." });
      return;
    }

    if (paymentMethod === "razorpay") {
      const response = await fetch("/create-razorpay-order", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ addressId }),
      });

      const data = await response.json();
    
      if (!response.ok) throw new Error(data.message);
      

      const options = {
        key: data.key,
        amount: data.amount,
        currency: "INR",
        order_id: data.orderId,
        name: "Skinova",
        description: "Purchase from Skinova",
        handler: async function (response) {
          const verifyResponse = await fetch("/verify-payment", {
            method: "POST",
            headers: { "Content-Type": "application/json" },
            body: JSON.stringify({ 
              orderId: data.orderId,
              paymentId: response.razorpay_payment_id,
              signature: response.razorpay_signature,
              addressId
            })
          });

          const verifyData = await verifyResponse.json();
          if (verifyData.success) {
            Swal.fire({ icon: "success", title: "Payment Successful!", text: "Your order has been placed!" })
              .then(() => window.location.href = "/orders");
          } else {
            Swal.fire({ icon: "error", title: "Payment Failed", text: "Please try again!" });
          }
        },
        theme: { color: "#3399cc" },
      };

      const rzp1 = new Razorpay(options);
      rzp1.open();
      return;
    }

    // If Cash on Delivery is selected
    const response = await fetch("/place-order", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ addressId, paymentMethod }),
    });

    const data = await response.json();
    if (data.success) {
      Swal.fire({ icon: "success", title: "Order Placed!", text: "Your order has been successfully placed." })
        .then(() => window.location.href = "/orders");
    } else {
      Swal.fire({ icon: "error", title: "Oops!", text: data.message || "Something went wrong." });
    }
  } catch (error) {
    console.error("Error placing order:", error);
    Swal.fire({ icon: "error", title: "Error", text: "Failed to process order. Please try again." });
  }
}



  </script>
  
</body>
</html>
